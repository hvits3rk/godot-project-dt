[gd_scene load_steps=6 format=2]

[ext_resource path="res://scripts/forge/Forge.gd" type="Script" id=1]
[ext_resource path="res://scenes/forge/ForgePDA.tscn" type="PackedScene" id=2]
[ext_resource path="res://scripts/forge/inventory/Inventory.gd" type="Script" id=3]
[ext_resource path="res://scenes/forge/gui/forge_gui/ForgeGui.tscn" type="PackedScene" id=4]

[sub_resource type="GDScript" id=1]

script/source = "extends Node

signal state_changed

var states_stack = []
var current_state

onready var States = get_node(\"States\")
onready var Host = get_parent()

func _ready():
	current_state = States.INIT
	states_stack.push_front(States.InitState)
	states_stack.front().enter(Host)

func _process(delta):
	if states_stack.front().update(Host, delta):
		end_current_state()

func append_state(state):
	var new_state = states_stack.front().handle_event(Host, state)
	if new_state:
		current_state = state
		states_stack.push_front(new_state)
		states_stack.front().enter(Host)
		set_process(true)

func replace_state(state):
	var new_state = states_stack.front().handle_event(Host, state)
	if new_state:
		current_state = state
		var exited_state = states_stack.pop_front()
		exited_state.exit(Host)
		states_stack.push_front(new_state)
		states_stack.front().enter(Host)
		set_process(true)

func end_current_state():
	if states_stack.size() <= 1:
		return
	var exited_state = states_stack.pop_front()
	exited_state.exit(Host)
	states_stack.front().enter(Host)

func clear_states_stack():
	while end_current_state():
		pass

func _exit_tree():
	clear_states_stack()
	var exited_state = states_stack.pop_front()
	exited_state.exit(Host)
"

[node name="Forge" type="Node"]

script = ExtResource( 1 )
_sections_unfolded = [ "Pause" ]

[node name="ForgePDA" parent="." index="0" instance=ExtResource( 2 )]

script = SubResource( 1 )

[node name="Inventory" type="Node" parent="." index="1"]

script = ExtResource( 3 )

[node name="ForgeGui" parent="." index="2" instance=ExtResource( 4 )]


